# Utilizando a imagem oficial do Maven com JDK 17 (Eclipse Temurin)
FROM maven:3.8.8-eclipse-temurin-17 as build

# Diretório de trabalho no contêiner
WORKDIR /app

# Copiando o arquivo de configuração do Maven para o contêiner
COPY pom.xml .

# Copiando o código-fonte para o contêiner
COPY src /app/src

# Baixando dependências do Maven
RUN mvn dependency:resolve

# Compilando o projeto e gerando o arquivo .war para o Tomcat
# O -DskipTests é uma flag que evita a execução dos testes durante o build, o que acelera o processo,
# especialmente em builds de contêiner.
RUN mvn clean package -DskipTests

FROM tomcat:10.1-jdk17

# Copiando o arquivo .war gerado para o diretório webapps do Tomcat
COPY --from=build /app/target/*.war /usr/local/tomcat/webapps/app.war

# Definindo variáveis de ambiente para o Tomcat
#ENV CATALINA_OPTS="-Djava.security.egd=file:/dev/./urandom"
#ENV TOMCAT_USER="admin"
#ENV TOMCAT_PASSWORD="admin"

ENV DB_RESOURCE_NAME="jdbc/helloworld" DB_URL="" DB_USERNAME="" DB_DRIVER_CLASS_NAME=""
ENV DB_PASSWORD_FILE="secrets/db-password"
ENV MANAGER_PASSWORD_FILE="secrets/manager-password"

COPY conf/context.xml conf/tomcat-users.xml ./conf/
COPY webapps/manager/META-INF/context.xml ./webapps/manager/META-INF/context.xml

COPY run-catalina.sh /run-catalina.sh
RUN chmod +x /run-catalina.sh

CMD ["/run-catalina.sh"]